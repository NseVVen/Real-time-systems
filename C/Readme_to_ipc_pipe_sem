Межпроцессное взаимодействие: Pipe + POSIX Semaphore

Программа демонстрирует взаимодействие двух процессов на языке C:
-Используется fork() для создания дочернего процесса
-Передача данных осуществляется через неименованный канал (pipe)
-Синхронизация выполнения между процессами — через именованный POSIX-семафор

Это безопасный способ гарантировать, что дочерний процесс не начнёт чтение, пока родитель не завершит запись.

Что делает программа
-Родительский процесс:
--Создаёт pipe и POSIX-семафор
--Пишет сообщение в канал
--Даёт "сигнал" дочке через семафор
-Дочерний процесс:
--Ждёт семафор
--Читает сообщение из канала
--Выводит полученное сообщение

Разработано в рамках учебного задания по предмету "Системы реального времени".
